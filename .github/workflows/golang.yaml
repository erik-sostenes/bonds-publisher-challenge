name: golang

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Clone repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Configure the Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.22.0"
          check-latest: true
          cache: true

      # Install dependencies
      - name: Install dependencies
        run: go mod download
        working-directory: ./backend

      # Install golangci-lint
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      # Execute linters
      - name: Run golangci-lint
        run: golangci-lint run --verbose
        working-directory: ./backend

      # Change permissions for the keys script
      - name: Make keys script executable
        run: chmod +x ./backend/scripts/keys.bash

      # Generate keys
      - name: Generate keys
        run: ./backend/scripts/keys.bash
        shell: bash

      # Set environment variables for keys using base64 encoding
      - name: Set environment variables
        run: |
          echo "PRIVATE_KEY=$(base64 -w 0 ./backend/private_key.pem)" >> $GITHUB_ENV
          echo "PUBLIC_KEY=$(base64 -w 0 ./backend/public_key.pem)" >> $GITHUB_ENV
        shell: bash

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL
        run: |
          until pg_isready --host=localhost --port=5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      # Run schema.sql to set up the database
      - name: Set up PostgreSQL schema
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: testdb
        run: |
          psql -f ./backend/sql/schema.sql

      # Run tests
      - name: Test
        env:
          DSN_POSTGRESQL: "postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable"
          PRIVATE_KEY: ${{ env.PRIVATE_KEY }}
          PUBLIC_KEY: ${{ env.PUBLIC_KEY }}
        run: go test -v ./...
        working-directory: ./backend

      # Build app
      - name: Build
        run: go build -v ./...
        working-directory: ./backend
